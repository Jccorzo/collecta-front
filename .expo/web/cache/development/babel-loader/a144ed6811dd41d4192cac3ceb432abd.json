{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\d.ocampo\\\\Documents\\\\Collecta\\\\collecta-front\\\\screens\\\\auth\\\\LoadingScreen.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport * as React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { Entypo } from '@expo/vector-icons';\n\nvar _Dimensions$get = Dimensions.get('window'),\n    height = _Dimensions$get.height,\n    width = _Dimensions$get.width;\n\nexport default function LoadingScreen(_ref) {\n  var style = _ref.style;\n  var colorOn = 'rgba(255, 128, 0, 1)';\n  var colorOf = 'rgba(205, 205, 205, 1)';\n\n  var _React$useState = React.useState(new Animated.Value(0)),\n      _React$useState2 = _slicedToArray(_React$useState, 1),\n      changeColor = _React$useState2[0];\n\n  var _React$useState3 = React.useState(new Animated.Value(0)),\n      _React$useState4 = _slicedToArray(_React$useState3, 1),\n      changeColor2 = _React$useState4[0];\n\n  var _React$useState5 = React.useState(new Animated.Value(0)),\n      _React$useState6 = _slicedToArray(_React$useState5, 1),\n      changeColor3 = _React$useState6[0];\n\n  var AnimatedDot = Animated.createAnimatedComponent(Entypo);\n  var interpolateColor = changeColor.interpolate({\n    inputRange: [0, 150, 300],\n    outputRange: [colorOf, colorOn, colorOf]\n  });\n  var interpolateColor2 = changeColor2.interpolate({\n    inputRange: [0, 150, 300],\n    outputRange: [colorOf, colorOn, colorOf]\n  });\n  var interpolateColor3 = changeColor3.interpolate({\n    inputRange: [0, 150, 300],\n    outputRange: [colorOf, colorOn, colorOf]\n  });\n  var time = 1000;\n  React.useEffect(function () {\n    Animated.loop(Animated.sequence([Animated.timing(changeColor, {\n      toValue: 300,\n      duration: time\n    }), Animated.timing(changeColor2, {\n      toValue: 300,\n      duration: time\n    }), Animated.timing(changeColor3, {\n      toValue: 300,\n      duration: time\n    })])).start();\n  });\n  return React.createElement(View, {\n    style: _objectSpread(_objectSpread({}, styles.container), style),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }\n  }, React.createElement(Image, {\n    style: {\n      height: height * .8,\n      width: width\n    },\n    resizeMode: 'center',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 11\n    }\n  }), React.createElement(View, {\n    style: {\n      flexDirection: 'row',\n      justifyContent: 'space-evenly',\n      width: 60\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 11\n    }\n  }, React.createElement(AnimatedDot, {\n    name: 'dot-single',\n    size: 50,\n    style: {\n      color: interpolateColor\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 15\n    }\n  }), React.createElement(AnimatedDot, {\n    name: 'dot-single',\n    size: 50,\n    style: {\n      color: interpolateColor2\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 15\n    }\n  }), React.createElement(AnimatedDot, {\n    name: 'dot-single',\n    size: 50,\n    style: {\n      color: interpolateColor3\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 15\n    }\n  })));\n}\nvar styles = StyleSheet.create({\n  container: {\n    backgroundColor: '#FFFFFF',\n    height: height,\n    justifyContent: 'space-around',\n    alignItems: 'center'\n  }\n});","map":{"version":3,"sources":["C:/Users/d.ocampo/Documents/Collecta/collecta-front/screens/auth/LoadingScreen.js"],"names":["React","Entypo","Dimensions","get","height","width","LoadingScreen","style","colorOn","colorOf","useState","Animated","Value","changeColor","changeColor2","changeColor3","AnimatedDot","createAnimatedComponent","interpolateColor","interpolate","inputRange","outputRange","interpolateColor2","interpolateColor3","time","useEffect","loop","sequence","timing","toValue","duration","start","styles","container","flexDirection","justifyContent","color","StyleSheet","create","backgroundColor","alignItems"],"mappings":"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","sourcesContent":["import * as React from 'react';\r\nimport {View, Image, Dimensions, Animated, StyleSheet} from 'react-native';\r\nimport {Entypo} from '@expo/vector-icons';\r\n\r\nvar { height, width } = Dimensions.get('window');\r\nexport default function LoadingScreen({style}) {\r\n\r\n  const colorOn = 'rgba(255, 128, 0, 1)';\r\n  const colorOf = 'rgba(205, 205, 205, 1)';\r\n\r\n  const [changeColor] = React.useState(new Animated.Value(0))\r\n  const [changeColor2] = React.useState(new Animated.Value(0))\r\n  const [changeColor3] = React.useState(new Animated.Value(0))\r\n\r\n  const AnimatedDot = Animated.createAnimatedComponent(Entypo)\r\n\r\n  const interpolateColor = changeColor.interpolate({\r\n    inputRange: [0, 150, 300],\r\n    outputRange: [colorOf, colorOn, colorOf]\r\n  })\r\n\r\n  const interpolateColor2 = changeColor2.interpolate({\r\n    inputRange: [0, 150, 300],\r\n    outputRange: [colorOf, colorOn, colorOf]\r\n  })\r\n\r\n  const interpolateColor3 = changeColor3.interpolate({\r\n    inputRange: [0, 150, 300],\r\n    outputRange: [colorOf, colorOn, colorOf]\r\n  })\r\n\r\n \r\n  const time = 1000;\r\n    \r\n    React.useEffect(()=>{\r\n      Animated.loop(\r\n        Animated.sequence([\r\n          Animated.timing(changeColor, {\r\n            toValue: 300,\r\n            duration: time,\r\n          }),\r\n          Animated.timing(changeColor2, {\r\n            toValue: 300,\r\n            duration: time\r\n          }),\r\n          Animated.timing(changeColor3, {\r\n            toValue: 300,\r\n            duration: time\r\n          })\r\n        ])\r\n      ).start()\r\n    })\r\n    return (\r\n        <View style={{...styles.container, ...style}}>\r\n          <Image\r\n          style={{height:height*.8, width:width}}\r\n          \r\n          resizeMode={'center'}\r\n          />\r\n          <View style={{flexDirection:'row', justifyContent:'space-evenly', width:60}}>\r\n              <AnimatedDot name={'dot-single'} size={50} style={{color:interpolateColor}}/>\r\n              <AnimatedDot name={'dot-single'} size={50} style={{color:interpolateColor2}}/>\r\n              <AnimatedDot name={'dot-single'} size={50} style={{color:interpolateColor3}}/> \r\n          </View>\r\n        </View>\r\n    );\r\n  }\r\n\r\n  const styles = StyleSheet.create({\r\n    container: {\r\n      backgroundColor:'#FFFFFF', \r\n      height: height, \r\n      justifyContent:'space-around', \r\n      alignItems:'center'}\r\n  })"]},"metadata":{},"sourceType":"module"}