{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\d.ocampo\\\\Documents\\\\Collecta\\\\collecta-front\\\\components\\\\Dropdown.js\";\nimport React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport TouchableText from \"./TouchableText\";\nimport { AntDesign } from '@expo/vector-icons';\nimport { ScrollView } from 'react-native-gesture-handler';\n\nvar _Dimensions$get = Dimensions.get('window'),\n    height = _Dimensions$get.height,\n    width = _Dimensions$get.width;\n\nfunction DropdownButton(_ref) {\n  var func = _ref.func,\n      text = _ref.text,\n      styles = _ref.styles;\n  return React.createElement(TouchableOpacity, {\n    onPress: func,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 13\n    }\n  }, React.createElement(View, {\n    style: [buttonStyles.row, styles],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 17\n    }\n  }, React.createElement(Text, {\n    style: buttonStyles.text,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 21\n    }\n  }, text), React.createElement(AntDesign, {\n    name: 'down',\n    color: '#707070',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 21\n    }\n  })));\n}\n\nfunction DropdownList(_ref2) {\n  var visible = _ref2.visible,\n      _func = _ref2.func,\n      data = _ref2.data,\n      styleForMargin = _ref2.styleForMargin;\n  var fadeAnim = React.useRef(new Animated.Value(0)).current;\n\n  var fadeIn = function fadeIn() {\n    Animated.timing(fadeAnim, {\n      toValue: 1,\n      duration: 500\n    }).start();\n  };\n\n  var fadeOut = function fadeOut() {\n    Animated.timing(fadeAnim, {\n      toValue: 0,\n      duration: 500\n    }).start();\n  };\n\n  React.useEffect(function () {\n    visible ? fadeIn() : fadeOut();\n  }, [visible]);\n\n  if (visible) {\n    return React.createElement(Animated.View, {\n      style: [styles.modalView, {\n        opacity: fadeAnim\n      }, styleForMargin],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }\n    }, React.createElement(FlatList, {\n      style: {\n        maxHeight: height * 0.4\n      },\n      data: data,\n      renderItem: function renderItem(_ref3) {\n        var item = _ref3.item;\n        return React.createElement(TouchableText, {\n          containerStyle: styles.listInModal,\n          func: function func() {\n            return _func(item);\n          },\n          text: item.title,\n          textStyle: styles.text,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 55\n          }\n        });\n      },\n      keyExtractor: function keyExtractor(item) {\n        return item.id;\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 25\n      }\n    }));\n  } else {\n    return null;\n  }\n}\n\nexport { DropdownList, DropdownButton };\nvar buttonStyles = StyleSheet.create({\n  text: {\n    color: '#707070',\n    fontFamily: 'roboto-regular',\n    fontSize: 16\n  },\n  row: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    borderWidth: 1,\n    borderColor: '#FF8000',\n    padding: 18,\n    borderRadius: 20\n  }\n});\nvar styles = StyleSheet.create({\n  modalView: {\n    width: width * 0.9,\n    margin: 30,\n    backgroundColor: \"#FFFFFF\",\n    shadowColor: \"#000\",\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    shadowOpacity: 0.25,\n    shadowRadius: 3.84,\n    elevation: 5,\n    position: 'absolute',\n    zIndex: 1\n  },\n  text: {\n    color: '#707070',\n    fontFamily: 'roboto-regular',\n    fontSize: 16\n  },\n  listInModal: {\n    padding: 20,\n    width: width * 0.9,\n    borderBottomColor: '#D9D9D9',\n    borderBottomWidth: 1,\n    zIndex: 4\n  }\n});","map":{"version":3,"sources":["C:/Users/d.ocampo/Documents/Collecta/collecta-front/components/Dropdown.js"],"names":["React","TouchableText","AntDesign","ScrollView","Dimensions","get","height","width","DropdownButton","func","text","styles","buttonStyles","row","DropdownList","visible","data","styleForMargin","fadeAnim","useRef","Animated","Value","current","fadeIn","timing","toValue","duration","start","fadeOut","useEffect","modalView","opacity","maxHeight","item","listInModal","title","id","StyleSheet","create","color","fontFamily","fontSize","flexDirection","justifyContent","borderWidth","borderColor","padding","borderRadius","margin","backgroundColor","shadowColor","shadowOffset","shadowOpacity","shadowRadius","elevation","position","zIndex","borderBottomColor","borderBottomWidth"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { View, FlatList, StyleSheet, Dimensions, TouchableOpacity, Text, Animated, Button } from 'react-native';\r\nimport TouchableText from './TouchableText';\r\nimport { AntDesign } from '@expo/vector-icons';\r\nimport { ScrollView } from 'react-native-gesture-handler';\r\n\r\n\r\nvar { height, width } = Dimensions.get('window');\r\n\r\nfunction DropdownButton({func, text, styles}){\r\n    return(\r\n            <TouchableOpacity onPress={func}>\r\n                <View style={[buttonStyles.row, styles]}>\r\n                    <Text style={buttonStyles.text}>{text}</Text>\r\n                    <AntDesign name={'down'} color={'#707070'}/>\r\n                </View>\r\n            </TouchableOpacity>\r\n    );\r\n}\r\n\r\nfunction DropdownList ({visible,func,data, styleForMargin}){\r\n\r\n    const fadeAnim = React.useRef(new Animated.Value(0)).current;\r\n\r\n    const fadeIn = () => {\r\n        Animated.timing(fadeAnim, {\r\n          toValue: 1,\r\n          duration: 500\r\n        }).start();\r\n      };\r\n\r\n      const fadeOut = () => {\r\n        Animated.timing(fadeAnim, {\r\n          toValue: 0,\r\n          duration: 500\r\n        }).start();\r\n      };\r\n\r\n      React.useEffect(()=>{ visible ? fadeIn():fadeOut()},[visible])\r\n\r\n    if(visible){\r\n        return( \r\n                <Animated.View style={[styles.modalView, {opacity:fadeAnim},styleForMargin]}>\r\n                        <FlatList\r\n                            style={{maxHeight:height*0.4}}\r\n                            data={data}\r\n                            renderItem={({ item }) => <TouchableText containerStyle={styles.listInModal} func={()=>func(item)} text={item.title} textStyle={styles.text}/> }\r\n                            keyExtractor={item => item.id}\r\n                        />\r\n                </Animated.View>\r\n        );\r\n    }else{return null}\r\n}\r\n\r\nexport { DropdownList, DropdownButton };\r\n\r\nconst buttonStyles = StyleSheet.create({\r\n    text:{\r\n        color:'#707070',\r\n        fontFamily:'roboto-regular',\r\n        fontSize:16\r\n    },\r\n    row:{\r\n        flexDirection: 'row',\r\n        justifyContent: 'space-between',\r\n        borderWidth:1,\r\n        borderColor: '#FF8000',\r\n        padding:18,\r\n        borderRadius:20\r\n    }\r\n})\r\n\r\nconst styles = StyleSheet.create({\r\n    modalView: {\r\n        width: width*0.9,\r\n        margin:30,\r\n        backgroundColor: \"#FFFFFF\",\r\n        shadowColor: \"#000\",\r\n        shadowOffset: {\r\n            width: 0,\r\n            height: 2\r\n        },\r\n        shadowOpacity: 0.25,\r\n        shadowRadius: 3.84,\r\n        elevation: 5,\r\n        position:'absolute',\r\n        zIndex:1\r\n    },\r\n    text:{\r\n        color:'#707070',\r\n        fontFamily:'roboto-regular',\r\n        fontSize:16,\r\n    },\r\n    listInModal : {\r\n        padding:20,\r\n        width:width*0.9,\r\n        borderBottomColor: '#D9D9D9',\r\n        borderBottomWidth: 1,\r\n        zIndex:4\r\n    }\r\n})"]},"metadata":{},"sourceType":"module"}