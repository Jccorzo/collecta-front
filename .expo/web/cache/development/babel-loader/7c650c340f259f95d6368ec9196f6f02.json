{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nvar _jsxFileName = \"C:\\\\Users\\\\d.ocampo\\\\Documents\\\\Collecta\\\\collecta-front\\\\screens\\\\auth\\\\SignInScreen.js\";\nimport React, { useState } from 'react';\nimport { Auth } from 'aws-amplify';\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport { AuthContext } from \"../../AuthProvider\";\nimport { Text } from 'react-native-elements';\nimport TouchableText from \"../../components/TouchableText\";\nimport ButtonWithState from \"../../components/ButtonWithState\";\n\nfunction uSignIn(username, password) {\n  var user;\n  return _regeneratorRuntime.async(function uSignIn$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          _context.next = 3;\n          return _regeneratorRuntime.awrap(Auth.signIn(username, password));\n\n        case 3:\n          user = _context.sent;\n          _context.next = 9;\n          break;\n\n        case 6:\n          _context.prev = 6;\n          _context.t0 = _context[\"catch\"](0);\n\n          if (_context.t0.code === 'PasswordResetRequiredException') {} else if (_context.t0.code === 'NotAuthorizedException') {} else if (_context.t0.code === 'UserNotFoundException') {} else {\n            console.log(_context.t0);\n          }\n\n        case 9:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, [[0, 6]], Promise);\n}\n\nvar _Dimensions$get = Dimensions.get('window'),\n    height = _Dimensions$get.height;\n\nexport default function SignInScreen() {\n  var context = React.useContext(AuthContext);\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      username = _useState2[0],\n      setUsername = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      password = _useState4[0],\n      setPassword = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      focusU = _useState6[0],\n      setFocusU = _useState6[1];\n\n  var _useState7 = useState(false),\n      _useState8 = _slicedToArray(_useState7, 2),\n      focusP = _useState8[0],\n      setFocusP = _useState8[1];\n\n  var _useState9 = useState(true),\n      _useState10 = _slicedToArray(_useState9, 2),\n      disabled = _useState10[0],\n      setDisabled = _useState10[1];\n\n  React.useEffect(function () {\n    password.length > 0 && username.length > 0 ? setDisabled(false) : setDisabled(true);\n  });\n  var secondTextInputRef = React.useRef(null);\n\n  var focusSecondTextInput = function focusSecondTextInput() {\n    return secondTextInputRef.current.focus();\n  };\n\n  return React.createElement(TouchableWithoutFeedback, {\n    onPress: Keyboard.dismiss,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 5\n    }\n  }, React.createElement(ScrollView, {\n    style: styles.container,\n    contentContainerStyle: {\n      alignItems: 'center',\n      justifyContent: 'space-between'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    style: [styles.box, {\n      height: height * 0.4,\n      justifyContent: 'space-evenly',\n      alignItems: 'center'\n    }],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }\n  }, React.createElement(Image, {\n    style: {\n      width: 175,\n      height: 105\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 11\n    }\n  }), React.createElement(Text, {\n    style: styles.text,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 11\n    }\n  }, \"Bienvenidos\")), React.createElement(View, {\n    style: styles.box,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  }, React.createElement(TextInput, {\n    value: username,\n    onChangeText: setUsername,\n    returnKeyType: 'next',\n    placeholder: 'Correo electrónico',\n    style: [styles.input, focusU || username.length > 0 ? {\n      borderColor: '#FF8000'\n    } : {}],\n    autoFocus: true,\n    onSubmitEditing: focusSecondTextInput,\n    onFocus: function onFocus() {\n      return setFocusU(true);\n    },\n    onBlur: function onBlur() {\n      return setFocusU(false);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }\n  }), React.createElement(TextInput, {\n    value: password,\n    ref: secondTextInputRef,\n    onChangeText: setPassword,\n    placeholder: 'Contraseña',\n    secureTextEntry: true,\n    style: [styles.input, focusP || password.length > 0 ? {\n      borderColor: '#FF8000'\n    } : {}],\n    onFocus: function onFocus() {\n      return setFocusP(true);\n    },\n    onBlur: function onBlur() {\n      return setFocusP(false);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }\n  })), React.createElement(TouchableText, {\n    textStyle: styles.passButton,\n    text: 'Olvidaste tu contraseña',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }\n  }), React.createElement(View, {\n    style: styles.box,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }\n  }, React.createElement(ButtonWithState, {\n    func: function func() {\n      return context.authContext.signIn(username, password);\n    },\n    title: 'Ingresar',\n    disabled: disabled,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 11\n    }\n  }))));\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#FFFFFF',\n    height: height\n  },\n  box: {\n    height: height * 0.3,\n    alignItems: 'center',\n    justifyContent: 'space-around'\n  },\n  text: {\n    fontSize: 24,\n    color: '#FFBB00',\n    fontFamily: 'roboto-bold'\n  },\n  input: {\n    borderRadius: 20,\n    padding: 18,\n    width: 270,\n    height: 50,\n    borderWidth: 1,\n    borderColor: '#00000029',\n    fontSize: 14,\n    fontFamily: 'roboto-regular',\n    color: '#FFBB00'\n  },\n  passButton: {\n    color: \"#B8B5B5\",\n    textDecorationLine: 'underline',\n    fontFamily: 'roboto-regular'\n  }\n});","map":{"version":3,"sources":["C:/Users/d.ocampo/Documents/Collecta/collecta-front/screens/auth/SignInScreen.js"],"names":["React","useState","Auth","AuthContext","Text","TouchableText","ButtonWithState","uSignIn","username","password","signIn","user","code","console","log","Dimensions","get","height","SignInScreen","context","useContext","setUsername","setPassword","focusU","setFocusU","focusP","setFocusP","disabled","setDisabled","useEffect","length","secondTextInputRef","useRef","focusSecondTextInput","current","focus","Keyboard","dismiss","styles","container","alignItems","justifyContent","box","width","text","input","borderColor","passButton","authContext","StyleSheet","create","flex","backgroundColor","fontSize","color","fontFamily","borderRadius","padding","borderWidth","textDecorationLine"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport { Auth } from 'aws-amplify';\r\nimport { ScrollView , View, Image, TextInput, StyleSheet, Dimensions, TouchableWithoutFeedback, Keyboard } from 'react-native';\r\nimport { AuthContext } from '../../AuthProvider';\r\nimport { Text } from 'react-native-elements';\r\nimport TouchableText from '../../components/TouchableText';\r\nimport ButtonWithState from '../../components/ButtonWithState';\r\n\r\n\r\nasync function uSignIn(username, password) {\r\n  try {\r\n    const user = await Auth.signIn(username, password);\r\n  }\r\n  catch (err) {\r\n    if (err.code === 'PasswordResetRequiredException') {\r\n      // The error happens when the password is reset in the Cognito console\r\n      // In this case you need to call forgotPassword to reset the password\r\n      // Please check the Forgot Password part.\r\n    } else if (err.code === 'NotAuthorizedException') {\r\n      // The error happens when the incorrect password is provided\r\n    } else if (err.code === 'UserNotFoundException') {\r\n      // The error happens when the supplied username/email does not exist in the Cognito user pool\r\n    } else {\r\n      console.log(err);\r\n    }\r\n  }\r\n}\r\n\r\nvar { height } = Dimensions.get('window');\r\n\r\nexport default function SignInScreen() {\r\n\r\n  const context = React.useContext(AuthContext);\r\n\r\n  const [username, setUsername] = useState('');\r\n  const [password, setPassword] = useState('');\r\n\r\n  const [focusU, setFocusU] = useState(false);\r\n  const [focusP, setFocusP] = useState(false);\r\n\r\n  const [disabled, setDisabled] = useState(true);\r\n\r\n  React.useEffect(() => {\r\n    (password.length > 0 && username.length > 0) ? setDisabled(false) : setDisabled(true)\r\n  })\r\n\r\n\r\n  const secondTextInputRef = React.useRef(null);\r\n  const focusSecondTextInput = () => secondTextInputRef.current.focus();\r\n\r\n  return (\r\n    <TouchableWithoutFeedback onPress={Keyboard.dismiss}>\r\n      <ScrollView style={styles.container} contentContainerStyle={{alignItems: 'center', justifyContent: 'space-between'}}>\r\n        <View style={[styles.box, {height:height*0.4, justifyContent:'space-evenly', alignItems: 'center'}]}>\r\n          <Image\r\n            style={{ width: 175, height: 105 }}\r\n          />\r\n          <Text style={styles.text}>Bienvenidos</Text>\r\n        </View>\r\n        <View style={styles.box}>\r\n         \r\n            <TextInput\r\n              value={username}\r\n              onChangeText={setUsername}\r\n              returnKeyType={'next'}\r\n              placeholder={'Correo electrónico'}\r\n              style={[ styles.input, focusU || username.length > 0 ? {borderColor: '#FF8000'} : {}]}\r\n              autoFocus={true}\r\n              onSubmitEditing={focusSecondTextInput}\r\n              onFocus={() => setFocusU(true)}\r\n              onBlur={() => setFocusU(false)}\r\n            />\r\n          \r\n          \r\n            <TextInput\r\n              value={password}\r\n              ref={secondTextInputRef}\r\n              onChangeText={setPassword}\r\n              placeholder={'Contraseña'}\r\n              secureTextEntry={true}\r\n              style={[styles.input, focusP || password.length > 0 ? {borderColor: '#FF8000'} : {}]}\r\n              onFocus={() => setFocusP(true)}\r\n              onBlur={() => setFocusP(false)}\r\n            />\r\n          \r\n\r\n        </View>\r\n        <TouchableText textStyle={styles.passButton} text={'Olvidaste tu contraseña'}/>\r\n        <View style={styles.box}>\r\n          <ButtonWithState func={() => context.authContext.signIn(username, password)} title={'Ingresar'} disabled={disabled}/>\r\n        </View>\r\n      </ScrollView>\r\n    </TouchableWithoutFeedback>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: '#FFFFFF',\r\n    height: height\r\n  },\r\n  box: {\r\n    height: height*0.3,\r\n    alignItems: 'center',\r\n    justifyContent: 'space-around'\r\n  },\r\n  text: {\r\n    fontSize: 24,\r\n    color: '#FFBB00',\r\n    fontFamily: 'roboto-bold'\r\n  },\r\n  input: {\r\n    borderRadius: 20,\r\n    padding:18,\r\n    width: 270,\r\n    height: 50,\r\n    borderWidth: 1,\r\n    borderColor: '#00000029',\r\n    fontSize: 14,\r\n    fontFamily: 'roboto-regular',\r\n    color: '#FFBB00'\r\n  },\r\n  passButton: {\r\n    color: \"#B8B5B5\",\r\n    textDecorationLine: 'underline',\r\n    fontFamily: 'roboto-regular'\r\n  }\r\n});\r\n"]},"metadata":{},"sourceType":"module"}